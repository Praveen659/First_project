        -:    0:Source:project_tic.c
        -:    0:Graph:project_tic.gcno
        -:    0:Data:project_tic.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include<stdio.h>
        -:    2:#include<conio.h>
        -:    3:#include<stdlib.h>
        -:    4:#include<time.h>
        -:    5:#include<string.h>
        -:    6:#include <ctype.h>
        -:    7:void check(char,char);
        -:    8:char a[9]={'1','2','3','4','5','6','7','8','9'};
        3:    9:void gameName()
        -:   10:{
        3:   11:	printf("\n\t\t\t\t\t Tic Tac Toe Game\t\t\t\t\n");
        3:   12:}
       35:   13:void show()
        -:   14:{
       35:   15:	printf("\n\n\t\t\t\t\t---|---|---\n");
       35:   16:	printf("\t\t\t\t\t %c | %c |%c \n",a[0],a[1],a[2]);
       35:   17:	printf("\t\t\t\t\t---|---|---\n");
       35:   18:	printf("\t\t\t\t\t %c | %c |%c \n",a[3],a[4],a[5]);
       35:   19:	printf("\t\t\t\t\t---|---|---\n");
       35:   20:	printf("\t\t\t\t\t %c | %c |%c \n",a[6],a[7],a[8]);
       35:   21:	printf("\t\t\t\t\t---|---|---\n");
       35:   22:}  
        3:   23:void inputSymbol()
        -:   24:{
        3:   25:	printf("\nplayer 1 symbol :X:\n");
        3:   26:	printf("\nplayer 2 symbol :0:\n");
        3:   27:} 
        3:   28:void start()
        -:   29:{
        -:   30:	int pa;
        3:   31:	printf("\nEnter who will start the game : player 1 or player 2\n");
        3:   32:	scanf("%d",&pa);
        3:   33:}    
       19:   34:void play()
        -:   35:{
        -:   36:	char position,symbol;
       19:   37:	printf("\nEnter postion and symbol for the player \n");
       19:   38:	fflush(stdin);
       19:   39:	scanf("%c",&position);
       19:   40:	fflush(stdin);
       19:   41:	scanf("%c",&symbol);
       19:   42:	check(position,symbol);
       19:   43:} 
       19:   44:void check(char position,char symbol)
        -:   45:{
        -:   46:	int i;
      190:   47:	for(i=0;i<=8;i++)
        -:   48:	{
      171:   49:		if(a[i]==position)
        -:   50:		{
       19:   51:			a[i]=symbol;
        -:   52:			
        -:   53:		}
        -:   54:	}
       19:   55:}
        -:   56:  
       16:   57:int end()
        -:   58:{
       16:   59:	if((a[0]=='x' && a[1]=='x' && a[2]=='x') ||(a[0]=='x'&&a[3]=='x' && a[6]=='x')||(a[0]=='x'&&a[4]=='x' && a[8]=='x'))
        -:   60:	{
    #####:   61:		return(100);
        -:   62:	}
       16:   63:	else if((a[0]=='0' && a[1]=='0' && a[2]=='0') ||(a[0]=='0'&&a[3]=='0' && a[6]=='0')||(a[0]=='0'&&a[4]=='0' && a[8]=='0'))
        1:   64:		return(200);
       15:   65:	else if(a[1]=='x'&& a[4]=='x'&&a[7]=='x')
    #####:   66:		return(100);
       15:   67:	else if(a[1]=='0'&& a[4]=='0'&&a[7]=='0')
    #####:   68:		return(200);
       15:   69:	else if(a[2]=='x'&& a[5]=='x'&&a[8]=='x')
    #####:   70:		return(100);
       15:   71:	else if(a[2]=='0'&& a[5]=='0'&&a[8]=='0')
    #####:   72:		return(200);
       15:   73:    else if(a[3]=='x'&& a[4]=='x'&&a[5]=='x')
    #####:   74:		return(100);
       15:   75:	else if(a[3]=='0'&& a[4]=='0'&&a[5]=='0')
    #####:   76:		return(200);
       15:   77:    else if(a[2]=='x'&& a[4]=='x'&&a[6]=='x')
        1:   78:		return(100);
       14:   79:	else if(a[2]=='0'&& a[4]=='0'&&a[6]=='0')
        1:   80:		return(200);
       13:   81:    else if(a[6]=='x'&& a[7]=='x'&&a[8]=='x')
    #####:   82:		return(100);
       13:   83:	else if(a[6]=='0'&& a[7]=='0'&&a[8]=='0')
    #####:   84:		return(200);
       13:   85:    return(300);
        -:   86:	
        -:   87:}
        1:   88:void tic_toc_toe()
        -:   89:{
        -:   90:
        1:   91:		a[0]='1';
        1:   92:		a[1]='2';
        1:   93:		a[2]='3';
        1:   94:		a[3]='4';
        1:   95:		a[4]='5';
        1:   96:		a[5]='6';
        1:   97:		a[6]='7';
        1:   98:		a[7]='8';
        1:   99:		a[8]='9';
        -:  100:	int k;
        -:  101:	int ch;
        -:  102:	labell:
        3:  103:	gameName();
        3:  104:	show();
        3:  105:	inputSymbol();
        3:  106:	start();
        3:  107:	play();
        -:  108:
        -:  109:	label:
        -:  110:	//clrscr();
       16:  111:	show();
       16:  112:	play();
       16:  113:	k=end();
        -:  114:	//clrscr();
        -:  115:	//system("cls");
       16:  116:	show(); 
       16:  117:		if(k==100)
        1:  118:			printf("\nPlayer 1 won\n");
       15:  119:		else if(k==200)
        2:  120:			printf("\nPlayer 2 won\n");
        -:  121:		else
       13:  122:			goto label;
        3:  123:	printf("\nDo you want to play continue...Enter 1 for YES and 0 for NO:");
        3:  124:	scanf("%d",&ch);
        3:  125:	if(ch==1)
        -:  126:	{
        2:  127:		a[0]='1';
        2:  128:		a[1]='2';
        2:  129:		a[2]='3';
        2:  130:		a[3]='4';
        2:  131:		a[4]='5';
        2:  132:		a[5]='6';
        2:  133:		a[6]='7';
        2:  134:		a[7]='8';
        2:  135:		a[8]='9';
        2:  136:		goto labell;
        -:  137:	}
        -:  138:	else
        -:  139:	{
        1:  140:		printf("Thank you\n");
        1:  141:		return ;
        -:  142:
        -:  143:	}
        -:  144:	
        -:  145:}
       13:  146:void passk(char* data)
        -:  147:{
        -:  148:	//char data[20];
        -:  149:    while(1)
        1:  150:    {
       13:  151:        int i = 0;
        -:  152:        char c;
        -:  153:
        -:  154:        //printf("Enter data: ");
        -:  155:
       96:  156:        while ((c = getch()) != '\r') {
       70:  157:            if (c == '\b') {  // Check for backspace character
    #####:  158:                if (i > 0) {
    #####:  159:                    printf("\b \b");  // Erase the character from the screen
    #####:  160:                    i--;
        -:  161:                }
        -:  162:            } 
        -:  163:            else {
       70:  164:                data[i++] = c;
       70:  165:                printf("*");  // Print asterisks instead of the actual characters
        -:  166:                
        -:  167:            }
        -:  168:        }
       13:  169:        data[i] = '\0';
        -:  170:        //printf("%s\n",data); 
       13:  171:        if((strcmp(data,"rock")==0))
        -:  172:        {
        4:  173:            break;
        -:  174:        }
        9:  175:        else if((strcmp(data,"paper")==0))
        -:  176:        {
        5:  177:            break;
        -:  178:        }   
        4:  179:        else if((strcmp(data,"scissors")==0))
        -:  180:        {       
        3:  181:            break;
        -:  182:        }
        -:  183:        else{
        1:  184:            printf("\nyou entered wrong\nplease try again\n");
        -:  185:        }
        -:  186:    }
        -:  187:
        -:  188:    //printf("\nData entered: %s\n", data);
        -:  189:
        -:  190:    
       12:  191:}
        1:  192:void rock_paper()
        -:  193:{
        1:  194:	printf("Let's play Rock, Paper, Scissors!\n");
        1:  195:    printf("Rock beats scissors. Scissors beats paper. Paper beats rock.\n");
        -:  196:    
        -:  197:    char player1_name[100];
        -:  198:    char player2_name[100];
        -:  199:    char player1_choice[20];
        -:  200:    char player2_choice[20];
        -:  201:    
        1:  202:    printf("Player 1, enter your name: ");
        1:  203:    scanf("%s", player1_name);
        1:  204:    printf("Player 2, enter your name: ");
        1:  205:    scanf("%s", player2_name);
        -:  206:    
        5:  207:    while (1) {
        6:  208:        printf("\n%s's turn\n", player1_name);
        6:  209:        printf("Enter your choice (rock, paper, or scissors): ");
        6:  210:        passk(player1_choice);
        -:  211:
        -:  212:        
        6:  213:        printf("\n%s's turn\n", player2_name);
        6:  214:        printf("Enter your choice (rock, paper, or scissors): ");
        -:  215:        //scanf("%s", player2_choice);
        6:  216:        passk(player2_choice);
        -:  217:        // Convert choices to lowercase
       37:  218:        for (int i = 0; player1_choice[i]; i++) {
       31:  219:            player1_choice[i] = tolower(player1_choice[i]);
        -:  220:        }
       40:  221:        for (int i = 0; player2_choice[i]; i++) {
       34:  222:            player2_choice[i] = tolower(player2_choice[i]);
        -:  223:        }
        -:  224:        
        6:  225:        printf("\n%s choose: %s\n", player1_name, player1_choice);
        6:  226:        printf("%s choose: %s\n", player2_name, player2_choice);
        -:  227:        
        -:  228:        // Determine the winner
        6:  229:        if (strcmp(player1_choice, player2_choice) == 0) {
    #####:  230:            printf("It's a tie!\n");
        -:  231:        }
        6:  232:        else if (
       14:  233:            (strcmp(player1_choice, "rock") == 0 && strcmp(player2_choice, "scissors") == 0) ||
       13:  234:            (strcmp(player1_choice, "scissors") == 0 && strcmp(player2_choice, "paper") == 0) ||
        9:  235:            (strcmp(player1_choice, "paper") == 0 && strcmp(player2_choice, "rock") == 0)
        -:  236:        ) {
        1:  237:            printf("%s wins!\n", player1_name);
        -:  238:        }
        -:  239:        else {
        5:  240:            printf("%s wins!\n", player2_name);
        -:  241:        }
        -:  242:        
        -:  243:        char play_again;
        6:  244:        printf("\nDo you want to play again? (y/n): ");
        6:  245:        scanf(" %c", &play_again);
        -:  246:        
        6:  247:        if (play_again == 'n' || play_again == 'N') {
        1:  248:            printf("\nThank you for playing!\n");
        1:  249:            break;
        -:  250:        }
        -:  251:    }
        -:  252:
        1:  253:}              
        3:  254:void guessing_random_number()
        -:  255:{
        3:  256:	int number, guess, attempts = 0;
        3:  257:    srand(time(0));  //random number generator
        -:  258:    
        -:  259:    // It is used to generate the numbers 1 to 100
        3:  260:    number = rand() % 100 + 1;
        -:  261:    
        3:  262:    printf("Welcome to the Random Number Guessing Game!\n");
        -:  263:    
        -:  264:    do {
       27:  265:        printf("Guess the number (1-100): ");
       27:  266:        scanf("%d", &guess);
       27:  267:        attempts++;
        -:  268:        
       27:  269:        if (guess > number) 
        -:  270:        {
       11:  271:            printf("Higher value..from your guessing...please try again...\n");
       16:  272:        } else if (guess < number) {
       13:  273:            printf("Lower value..from your guessing...please try again....\n");
        -:  274:        } else {
        3:  275:            printf("Congratulations! You guessed the number in %d attempts.\n", attempts);
        -:  276:        }
       27:  277:    } while (guess != number);
        -:  278:
        3:  279:}
        5:  280:void main()
        -:  281:{
        -:  282:	
        -:  283:	while(1)
        4:  284:	{
        5:  285:		printf("\n\t\t\t\t\t************WELCOME**************\n");
        5:  286:		printf("\n\t\t\t\t\t\tLET'S HAVE A FUN\n");
        5:  287:		printf("\n\t\t\t\t\t Enter 1 to play TIC-TAC-TOE\n");
        5:  288:		printf("\n\t\t\t\t\t Enter 2 to play ROCK-PAPER-SCISSORS\n");
        5:  289:		printf("\n\t\t\t\t\t Enter 3 to play GUESSING RANDOM NUMBER GAME\n");
        5:  290:		printf("\n\t\t\t\t\tCHOOSE A GAME AND ENJOY..\n");
        -:  291:		// printf("1.Tic Tac Toe\n");
        -:  292:		// printf("2.Rock Paper Scissor\n");
        -:  293:		// printf("3.Guessing random number\n");
        -:  294:		// printf("Choose one game:");
        -:  295:		int game;
        5:  296:		scanf("\t\t\t\t\t\t%d",&game);
        5:  297:		switch(game)
        -:  298:		{
        -:  299:			case 1:
        1:  300:				tic_toc_toe();
        1:  301:				break;
        -:  302:			case 2:
        1:  303:				rock_paper();
        1:  304:				break;
        -:  305:			case 3:
        3:  306:				guessing_random_number();
        3:  307:				break;
        -:  308:			default:
    #####:  309:				printf("Entered wrong number\n");
    #####:  310:				break;
        -:  311:		}
        -:  312:		int pr;
        5:  313:		printf("Do u want play any game again Enter 1 or 0:");
        5:  314:		scanf("%d",&pr);
        5:  315:		if(pr==0)
        -:  316:		{
        1:  317:			printf("Thank you\n");
        1:  318:			break;
        -:  319:		}
        -:  320:	}
        -:  321:	
        -:  322:    //clrscr();
        1:  323:}
